curl https://releases.rancher.com/install-docker/20.10.sh | sh

sudo apt-get update


curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl


curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
sudo apt-get install apt-transport-https --yes
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.4.6 bash



//bo qua
kubectl -n cattle-system exec -it rancher-6757f6b675-rj42p -- /bin/bash
kubectl -n cattle-system exec -it rancher-6757f6b675-97vtb -- /bin/bash

kubectl -n cattle-system patch deployment rancher -p '{"spec": {"template": {"spec": {"containers": [{"name": "rancher", "ports": [{"containerPort": 8888, "protocol": "TCP"}]}]}}}}'
//


k3d cluster create testcluster


helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
kubectl create namespace cattle-system

# If you have installed the CRDs manually instead of with the `--set installCRDs=true` option added to your Helm install command, you should upgrade your CRD resources before upgrading the Helm chart:
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
# Add the Jetstack Helm repository
helm repo add jetstack https://charts.jetstack.io
# Update your local Helm chart repository cache
helm repo update
# Install the cert-manager Helm chart
helm install cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.7.1





helm repo add rancher-stable https://releases.rancher.com/server-charts/stable


helm install rancher rancher-stable/rancher \
  --namespace cattle-system \
  --set hostname=rancher.my.org \
  --set bootstrapPassword=admin \
  --set replicas=2 \
  --set service.type=LoadBalancer

docker run -d --name=rancher-server --restart=unless-stopped -p 8383:8383 --privileged rancher/rancher:v2.4.18
kubectl -n cattle-system rollout status deploy/rancher
 docker logs b0766b829514 2>&1 | grep "Bootstrap Password:" ==> trả về password để vô setup
krCcESY7g3DL38Yr
 
helm upgrade rancher rancher-stable/rancher \
  --namespace cattle-system \
  --set hostname=http://103.77.173.200/




  Node-port: sẽ call thông chủ yếu trong mạng local, có thể dùng internal ip hoặc extenal



==//
cài k3s
curl -sfL https://get.k3s.io | K3S_KUBE_VERSION=v1.26.8 sh -

move sang kubectl
 scp root@ubuntu:/etc/rancher/k3s/k3s.yaml ~/.kube/config
//
cấu hình nhiều domain trên cùng một ip của máy chủ
khi người dùng truy cập vào domain nào thì dns sẽ phân giải ip và gửi yêu cầu đó tới ip của máy chủ được cấu hình gán vào domain
trong yêu cầu đó sẽ có tên host là domain mà người dùng truy cập 
trong cấu hình ingress resource, có mục cấu hình host là gì
ingress controller sẽ dựa vào cấu hình đó so sánh với host có trong yêu cầu gửi tới và ánh xạ, gửi yêu cầu đó tới service được setup

cài dashboard hạ tầng
https://learn.netdata.cloud/docs/installing/kubernetes
chú ý chọn clusterip 19999 rồi ingress như thường


git submodule add http://192.168.3.147:8181/hacom/share/hacom.sharedrefs Sharedrefs


version: '3.8'

services:
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: abc@123
      POSTGRES_DB: dbjira
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_back-up:/var/lib/postgresql/data-backup

  redis:
    image: redis
    restart: always
    ports:
      - "6376:6379"
    command: ["redis-server", "--requirepass", "abc@123"]
    volumes:
      - redis_data:/data
      - redis_data_back-up:/data-backup

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8383:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres

  redisinsight:
    image: redislabs/redisinsight
    restart: always
    ports:
      - "8301:8001"
    depends_on:
      - redis

volumes:
  postgres_data:
  postgres_data_back-up:
  redis_data:
  redis_data_back-up:


version: '3'
services:
  rancher:
    image: rancher/rancher:v2.7.9
    ports:
      - "8333:80"
      - "8443:443"
    privileged: true
    volumes:
      - /opt/rancher:/var/lib/rancher
    environment:
      - CATTLE_SYSTEM_CATALOG=bundled
      #- SSL_CERT_PATH=/etc/rancher/ssl/myserver.crt
     # - SSL_KEY_PATH=/etc/rancher/ssl/myserver.key







