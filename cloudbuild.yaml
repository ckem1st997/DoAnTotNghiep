apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: master-api
      name: master-api
    spec:
      ports:
        - name: "5001"
          port: 5001
          targetPort: 80
        - name: "5000"
          port: 5000
          targetPort: 81
      selector:
        io.kompose.service: master-api
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: redis
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seq
      name: seq
    spec:
      ports:
        - name: "5341"
          port: 5341
          targetPort: 80
      selector:
        io.kompose.service: seq
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: sqlserver
      name: sqlserver
    spec:
      ports:
        - name: "5433"
          port: 5433
          targetPort: 1433
      selector:
        io.kompose.service: sqlserver
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: warehouse-api
      name: warehouse-api
    spec:
      ports:
        - name: "5005"
          port: 5005
          targetPort: 80
        - name: "5006"
          port: 5006
          targetPort: 81
      selector:
        io.kompose.service: warehouse-api
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: master-api
      name: master-api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: master-api
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: master-api
        spec:
          containers:
            - env:
                - name: ASPNETCORE_ENVIRONMENT
                  value: Development
                - name: ASPNETCORE_URLS
                  value: http://0.0.0.0:80
                - name: ConnectionString
                  value: Server=sqldata;Database=MasterData;User Id=sa;Password=Aa!0977751021
                - name: GRPC_PORT
                  value: "81"
                - name: PATH_BASE
                  value: /warehouse-api
                - name: PORT
                  value: "80"
              image: doantotnghiep/master:linux-latest
              name: master-api
              ports:
                - containerPort: 80
                - containerPort: 81
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: redis
        spec:
          containers:
            - image: redis:alpine
              name: redis
              ports:
                - containerPort: 6379
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: doan-redis
          restartPolicy: Always
          volumes:
            - name: doan-redis
              persistentVolumeClaim:
                claimName: doan-redis
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: doan-redis
      name: doan-redis
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seq
      name: seq
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: seq
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: seq
        spec:
          containers:
            - env:
                - name: ACCEPT_EULA
                  value: "Y"
              image: datalust/seq:latest
              name: seq
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: sqlserver
      name: sqlserver
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: sqlserver
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: sqlserver
        spec:
          containers:
            - env:
                - name: ACCEPT_EULA
                  value: "Y"
                - name: SA_PASSWORD
                  value: Aa!0977751021
              image: mcr.microsoft.com/mssql/server:2019-latest
              name: sqlserver
              ports:
                - containerPort: 1433
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: doan-sqlserver
          restartPolicy: Always
          volumes:
            - name: doan-sqlserver
              persistentVolumeClaim:
                claimName: doan-sqlserver
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: doan-sqlserver
      name: doan-sqlserver
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: warehouse-api
      name: warehouse-api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: warehouse-api
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert --file docker-compose.yml -o cloudbuild.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: warehouse-api
        spec:
          containers:
            - env:
                - name: ASPNETCORE_ENVIRONMENT
                  value: Development
                - name: ASPNETCORE_URLS
                  value: http://0.0.0.0:80
                - name: ConnectionString
                  value: Server=sqldata;Database=WarehouseManagement;User Id=sa;Password=Aa!0977751021
                - name: GRPC_PORT
                  value: "81"
                - name: PATH_BASE
                  value: /warehouse-api
                - name: PORT
                  value: "80"
              image: doantotnghiep/warehouse.api:linux-latest
              name: warehouse-api
              ports:
                - containerPort: 80
                - containerPort: 81
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

