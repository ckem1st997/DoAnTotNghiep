input {
	http {	
		#default host 0.0.0.0:8080
		codec => json
	}
	    jdbc {
        jdbc_connection_string => "jdbc:sqlserver://localhost:5433;databaseName=WarehouseManagement;"
        jdbc_user => "sa"
        jdbc_password => "Aa!0977751021"
	    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mssqll-jdbc-10.2.1.jre8.jar"
        jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
        statement => "SELECT TOP(1000) * FROM WareHouse"
        tracking_column => "id"
        tracking_column_type => "numeric"
        use_column_value => true		
        last_run_metadata_path => "/usr/share/logstash/pipeline/.logstash_jdbc_last_run"
        schedule => "*/10 * * * * *"
		clean_run => true
		# tags => "sqlserver"
    }
}

## Add your filters / logstash plugins configuration here
filter {
 	split {
		field => "events"
		target => "e"
		remove_field => "events"
	}
	
}

output {
	# if "sqlserver" in [tags]
	# {
	elasticsearch {
		hosts => "elasticsearch:9200"
	#	index=>"doantotnghiep-%{+xxxx.ww}"
        index=>"sqlserver"


		document_id => "%{Id}"
		# doc_as_upsert => true
		# action => "update"
	}
	# stdout { codec => rubydebug }
# 	}
# 	else
# {
# 		elasticsearch {
# 		hosts => "elasticsearch:9200"
# 		index=>"searchmssql-%{+xxxx.ww}"
# 	}
#}

}


#  The TCP/IP connection to the host localhost, port 5433 has failed. Error: 
#  "Connection refused (Connection refused). Verify the connection properties.
#   Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port.
#   Make sure that TCP connections to the port are not blocked by a firewall.".