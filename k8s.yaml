---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -v convert -f docker-compose.yml -o k8s.yaml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -v convert -f docker-compose.yml -o k8s.yaml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: master-api
  name: master-api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: master-api
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -v convert -f docker-compose.yml -o k8s.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/doantotnghiep-default: "true"
        io.kompose.service: master-api
    spec:
      containers:
        - image: meoh0ang97/doantotnghiep:${PLATFORM:-linux}-${TAG:-latest}
          name: mt-api
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: doantotnghiep-default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/doantotnghiep-default: "true"
  podSelector:
    matchLabels:
      io.kompose.network/doantotnghiep-default: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -v convert -f docker-compose.yml -o k8s.yaml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe -v convert -f docker-compose.yml -o k8s.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/doantotnghiep-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:alpine
          name: rediscache
          ports:
            - containerPort: 6379
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: redis-claim0
      restartPolicy: Always
      volumes:
        - name: redis-claim0
          persistentVolumeClaim:
            claimName: redis-claim0
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis-claim0
  name: redis-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

